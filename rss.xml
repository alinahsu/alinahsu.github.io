<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Narrow gate leadeth unto life.</title>
  
  <subtitle>AliNAs HoME</subtitle>
  <link href="https://example.com/rss.xml" rel="self"/>
  
  <link href="https://example.com/"/>
  <updated>2025-08-19T05:01:46.186Z</updated>
  <id>https://example.com/</id>
  
  <author>
    <name>XU</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://example.com/2025/08/19/Matlab%E7%AC%94%E8%AE%B0/"/>
    <id>https://example.com/2025/08/19/Matlab%E7%AC%94%E8%AE%B0/</id>
    <published>2025-08-19T05:02:13.572Z</published>
    <updated>2025-08-19T05:01:46.186Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Matlab笔记"><a href="#Matlab笔记" class="headerlink" title="Matlab笔记"></a>Matlab笔记</h1><p>前言：多查找文档！！！<a href="https://ww2.mathworks.cn/help/matlab/index.html?s_tid=hc_panel">MATLAB Documentation</a></p><h2 id="（课程）"><a href="#（课程）" class="headerlink" title="（课程）"></a>（课程）</h2><p>1.matlab起源于<strong>FORTRAN语言</strong></p><p>2.摩尔定律：集成电路上可容纳的<strong>晶体管数目</strong>，大约每 <strong>18-24 个月翻一倍</strong>。</p><p>3.科学计算是基于<strong>浮点数体系</strong></p><p>4.“64位”：一个浮点数用64位储存（double）</p><p>5.误差：相对误差更加重要</p><p>6.example1：流体计算：</p><h2 id="（自学）"><a href="#（自学）" class="headerlink" title="（自学）"></a>（自学）</h2><p>matlab：语法类似于python</p><h3 id="1-函数格式："><a href="#1-函数格式：" class="headerlink" title="1.函数格式："></a>1.函数格式：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function[输出形参表：output1,...,outputn] = 函数名(输入形参表：)</span><br><span class="line">//函数体代码部分//</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>函数存为m文件，命名为函数名</p><p>example：获取数列最大值</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">my_max.m</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[maxval]</span>=<span class="title">my_max</span><span class="params">(L)</span></span></span><br><span class="line">maxval=L(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> ii=<span class="number">2</span>:<span class="built_in">length</span>(L)</span><br><span class="line"><span class="keyword">if</span> maxval&lt;L(ii)</span><br><span class="line">           maxval=L(ii)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;my_max(<span class="number">1</span>:<span class="number">100</span>)得到<span class="number">100</span></span><br></pre></td></tr></table></figure><p>优先利用matlab已有函数</p><p>输入参量：nargin（利用switch nargin判断输入参量个数：case 1输入一个参量 etc.）</p><p><del>：忽略不想要的输出：[</del>,a]:节省内存空间</p><p>@：创建<u>函数句柄</u>：</p><p>​      *函数句柄：*<em>函数句柄（function handle）*是对某个函数的引用</em>或“指针”，而不是函数值本身。*</p><p><em>它保存了“如何调用函数”的信息，因此可以通过句柄间接调用函数。(类似于别称)*</em></p><p>可以利用@来创建匿名函数从而减少m文件的创建：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; fun1=@(x,y)(x+y);</span><br><span class="line">&gt;&gt; fun1(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-图像绘制："><a href="#2-图像绘制：" class="headerlink" title="2.图像绘制："></a>2.图像绘制：</h3><p>meshigrid：</p><p><strong><code>meshgrid</code></strong> 用来把 <strong>一维向量</strong>（x 方向、y 方向的取值范围）转换成 <strong>二维网格矩阵</strong>。</p><p>常用于 <strong>绘制三维图</strong> 或 <strong>二维函数可视化</strong>。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[X, Y] = <span class="built_in">meshgrid</span>(x, y);</span><br><span class="line">[X, Y, Z] = <span class="built_in">meshgrid</span>(x, y, z);</span><br></pre></td></tr></table></figure><p>二维与三维：</p><ul><li>plot-&gt;plot3（一般三维图像）</li><li>scatter-&gt;scatter3（散点图）</li><li>bar-&gt;bar3&#x2F;bar3h（柱状图）</li><li>hist-&gt;hist3（区间直方图）</li><li>pie-&gt;pie3（饼图）</li><li>surf(x,y,z)（三维曲面图：surf(x,y,z,c)可指定颜色；a&#x3D;surf(-）可以把a作为曲面对象）</li><li>mesh(x,y,z)（曲面网格图）</li><li>contour(z)（等高线图）</li></ul><p>示例：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">load carbig <span class="comment">%这是matlab内部自带的数据</span></span><br><span class="line">X=[MPG,Weight]</span><br><span class="line">hist3(X)</span><br><span class="line">xlabel(<span class="string">&#x27;MPG&#x27;</span>)</span><br><span class="line">ylabel(<span class="string">&#x27;Weight&#x27;</span>)</span><br><span class="line"><span class="comment">%并没有自带？？</span></span><br></pre></td></tr></table></figure><p>绘图常用指令：</p><p>hold on&#x2F;hold off    保持&#x2F;不保持图像</p><p>colorbar    颜色栏</p><p>xlim(x1,x2)&#x2F;ylim坐标轴范围</p><p>ylabel&#x2F;xlabel坐标轴标签</p><p>title 图像标题</p><p>axis on&#x2F;axis off打开关闭坐标轴</p><p>text(x,y,’str’)在(x,y)处添加文字</p><p>quiver(x1,y1,x2,y2)生成(x1,y1)到(x2,y2)的箭头</p><p>句柄&#x2F;窗口控制：</p><p>图像句柄：通过句柄对图像的参数进行一些后期修改。</p><p><em>（句柄能调用的特性必须是图像本身所拥有的特性）</em></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="built_in">linspace</span>(<span class="number">-2</span>*<span class="built_in">pi</span>,<span class="number">2</span>*<span class="built_in">pi</span>);</span><br><span class="line">y1=<span class="built_in">sin</span>(x);</span><br><span class="line">y2=<span class="built_in">cos</span>(x);</span><br><span class="line">p=<span class="built_in">plot</span>(x,y1,x,y2);</span><br><span class="line">p(<span class="number">1</span>).LineWidth=<span class="number">2</span>;<span class="comment">%建立句柄修改第一条曲线线宽</span></span><br><span class="line">p(<span class="number">2</span>).Marker=<span class="string">&#x27;*&#x27;</span>;<span class="comment">%建立句柄修改第二条曲线标识</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">函数</th><th>英文全称&#x2F;含义</th><th>返回对象</th><th>用途</th></tr></thead><tbody><tr><td align="center"><code>gca</code></td><td>get current axes</td><td>当前坐标轴 (Axes) 的句柄</td><td>对坐标轴属性（刻度、标签、范围等）进行修改</td></tr><tr><td align="center"><code>gcf</code></td><td>get current figure</td><td>当前图形窗口 (Figure) 的句柄</td><td>对整个窗口属性（大小、标题、背景色等）进行修改</td></tr><tr><td align="center"><code>gco</code></td><td>get current object</td><td>当前选中的图形对象 (Line, Patch, Surface…)</td><td>对图形元素属性（颜色、线型、Marker 等）进行修改</td></tr></tbody></table><p>上表为gca，gcf，gco的用途（都是名词）</p><blockquote><p>[!NOTE]</p><p>gca区分子窗口，需要对每个subplot操作</p></blockquote><p>tip：在打开图片的窗口中也可以进行一些编辑操作</p><p>ctrl+s保存</p><h3 id="3-算法部分"><a href="#3-算法部分" class="headerlink" title="3.算法部分"></a>3.算法部分</h3><p>​（important）</p><h4 id="1-插值和拟合"><a href="#1-插值和拟合" class="headerlink" title="1.插值和拟合"></a>1.插值和拟合</h4><p>$$<br>插值问题：若已知离散点(x_i,f(x_i)),i&#x3D;0,1\dots n,<br>\<br>求新公式p(x),使得任意p(x_i)&#x3D;f(x_i),<br>\且p(x)在连续x空间内任意一点有定义。<br>$$</p><p>若p（x）是三角多项式：三角插值</p><p>代数多项式：多项式插值</p><p>n＝1：线性插值    n＝2：抛物线插值</p><p>①拉格朗日插值法：<br>$$<br>数据：(x_0,f(x_0)),(x_1,f(x_1))<br>\<br>构造：y&#x3D;L_1(x)&#x3D;f(x_0)\frac{x-x_1}{x_0-x_1}+f(x_1)\frac{x-x_0}{x_1-x_0}<br>\<br>又写作：l_0(x)&#x3D;\frac{x-x_1}{x_0-x_1}\qquad l_1(x)&#x3D;\frac{x-x_0}{x_1-x_0}<br>\<br>则：L_1(x)&#x3D;f(x_0)l_0(x)+f(x_1)l_1(x)<br>$$<br>对于n：<br>$$<br>l_k(x)&#x3D;\frac{\prod^n_{j&#x3D;0,j\neq k}(x-x_j)}{\prod^n_{j&#x3D;0,j\neq k}(x_k-x_j)}<br>\<br>L_n(x)&#x3D;\sum^n_{k&#x3D;0}f(x_k)l_k(x)<br>\<br>从而有：L_n(x_i)&#x3D;\sum^n_{k&#x3D;0}f(x_k)l_k(x_i)&#x3D;f(x_i)<br>(i&#x3D;1\dots n)<br>$$<br>（linear&#x2F;nearest&#x2F;next&#x2F;previous）：低阶插值</p><p>数据量大时需要次数较高，会产生较大震荡。数据规律明显时。高阶插值会更加平滑。</p><p>（pchip&#x2F;cubic&#x2F;v5cubic&#x2F;makima&#x2F;spline）：高阶插值</p><p>使用方法：</p><p>​vq&#x3D;interp1(x,v,xq,method):</p><p>​向量x为样本点，v包含v(x)(应变量),xq是查询点的坐标，method是比如‘makima’这一类的。</p><p>傅里叶插值（频域插值）：适合对于周期函数使用</p><p>fit：基本实现函数拟合的全部功能（多项式，整数，高斯，正弦，曲面）</p><p>app里面有一个曲线拟合工具箱</p><h4 id="2-规划算法"><a href="#2-规划算法" class="headerlink" title="2.规划算法"></a>2.规划算法</h4><p>线性规划：linprog：x&#x3D;linprog(f,A,b)求解minf’<em>x使得A</em>x小于等于b。</p><p>可以改变算法使得它算的更快。</p><p>需要指定为整数的线性规划ILP:intlinprog:通过intcon可以指定哪些变量为整数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">intcon = <span class="number">1</span>:<span class="number">3</span>;   <span class="comment">% 指定哪些变量必须为整数</span></span><br><span class="line">x = intlinprog(f,intcon,A,b,[],[],lb,ub);</span><br></pre></td></tr></table></figure><p>例子：<br>$$<br>题目：\<br>\begin{aligned}<br>&amp;要求\min ; 8x_{1} + x_{2} \<br>&amp;\text{条件是} \<br>&amp;\begin{cases}<br>x_{2} \in \mathbb{Z}, \<br>x_{1} + 2x_{2} \geq 14, \<br>4x_{1} - x_{2} \leq 33, \<br>2x_{1} + x_{2} \leq 20.<br>\end{cases}<br>\end{aligned}</p><p>\解：\<br>\begin{array}{c|c}<br>\text{数学模型} &amp; \text{MATLAB 表达} \ \hline<br>8x_{1} + x_{2} &amp; f &#x3D; \begin{bmatrix} 8 \ 1 \end{bmatrix} \[10pt]<br>x_{1} + 2x_{2} \geq 14 &amp; A(1,:) &#x3D; [-1,-2], ; b(1) &#x3D; 14 \[6pt]<br>4x_{1} - x_{2} \leq 33 &amp; A(2,:) &#x3D; [-4,-1], ; b(2) &#x3D; -33 \[6pt]<br>2x_{1} + x_{2} \leq 20 &amp; A(3,:) &#x3D; [2,1], ; b(3) &#x3D; 20 \[6pt]<br>x_{2} \in \mathbb{Z} &amp; \text{intcon} &#x3D; {2}<br>\end{array}<br>\注：matlab里面需要把大于等于转化为小于等于。</p><p>\从而有：\</p><p>f &#x3D; \begin{bmatrix} 8 \[6pt] 1 \end{bmatrix}, \quad<br>A &#x3D; \begin{bmatrix}<br>-1 &amp; -2 \<br>-4 &amp; -1 \<br> 2 &amp;  1<br>\end{bmatrix}, \quad<br>b &#x3D; \begin{bmatrix}<br>14 \[6pt] -33 \[6pt] 20<br>\end{bmatrix}, \quad<br>\text{intcon} &#x3D; {2}.<br>$$<br>求单变量在区间内的极值：fminbnd：x&#x3D;fiminbnd(fun,x_1,x_2)返回一个值x，是标量函数fun在x_1~x_2区间中的局部最小值。（display iter可以显示迭代）</p><p>求不连续函数的值：fminsearch：x&#x3D;fminsearch(fun,x_0)在x_0处求fun函数局部最小值。（也可显示迭代）</p><h4 id="3-分类算法"><a href="#3-分类算法" class="headerlink" title="3.分类算法"></a>3.分类算法</h4><p>在一些问题中，数据的回归值只有有限组数，称之为类别。不需要在连续空间进行回归，只需要对每一组数据投影到确定的类别。</p><p>①贝叶斯方法分类：（需要各个类别相互独立）fitcnb</p><p>Mdl&#x3D;fitcnb(Tb1,ResponseVarName)(数据集加标签值)</p><ul><li><code>X</code>：训练数据矩阵，大小是 n×p，表示 nnn 个样本、每个样本有 p 个特征。</li><li><code>Y</code>：分类标签向量，大小是 n×1，可以是数字、字符向量、categorical 类型。</li><li><code>Mdl</code>：训练好的 Naive Bayes 模型对象。</li></ul><p>-&gt;未知数据预测：label&#x3D;predict（Mdl,x)预测x处情况</p><p>②二叉决策树</p><p><img src="C:\Users\21729\AppData\Roaming\Typora\typora-user-images\image-20250819102750401.png" alt="image-20250819102750401"></p><p>fictree：tree&#x3D;fictree(Tb1,Response)（也可以进行预测）</p><p>支持向量机分类：另一种分类模式</p><p>K-最近邻分类：对于一个需要预测的输入向量x，我们只需要在训练数据集中寻找k个与向量x最近的向量的集合，然后把x的类别预测为这k个样本中类别数最多的那一类。<br>（fitcsvm）(效果不很好，受误差影响大)</p><p>层次聚类：linkage+cluster</p><p>k-means聚类：选一个聚类中心，分配样本，移动聚类中心…停止移动</p><h4 id="4-预测算法"><a href="#4-预测算法" class="headerlink" title="4.预测算法"></a>4.预测算法</h4><p>在问题中，往往会给出时刻以及其对应的数据，要求对于未来的数据进行预测，这类问题被称为时序预测：y&#x3D;f(t)在一系列离散点上的函数值。</p><p>时序预测的重点在于<strong>时序模型选取</strong>。</p><p>经常使用：ARMA时序模型</p><p>iddata：把输入和输出数据封装在一个iddata中：data&#x3D;iddata(输出信号，输入信号，采样时间)</p><p>forecast&amp;compare：预测和对比</p><p>代码</p><p>ar:ar模型的阶数一般意思是：用几个过去的点来预测当前。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sys=ar(z9,<span class="number">4</span>)<span class="comment">%用数据 Z9 （一般是 iddata 格式的数据）去拟合一个 4 阶 AR 模型。</span></span><br><span class="line"><span class="comment">%z9.ouputdata可以用来在compare中画图</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>armax函数：<strong>带外生输入的自回归滑动平均模型</strong>。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sys = armax(data, [na,nb,nc,nk])</span><br><span class="line"></span><br><span class="line"><span class="comment">%%参数解释：</span></span><br><span class="line"><span class="comment">%%data：输入输出数据（通常是 iddata 格式）</span></span><br><span class="line"><span class="comment">%%na：AR 部分的阶数</span></span><br><span class="line"><span class="comment">%%nb：B(q) 的阶数（输入的多项式阶数 + 1）</span></span><br><span class="line"><span class="comment">%%nc：C(q) 的阶数（噪声模型）</span></span><br><span class="line"><span class="comment">%%nk：输入延迟（dead time，以采样点计）</span></span><br><span class="line"><span class="comment">%%返回：</span></span><br><span class="line"><span class="comment">%%sys 是一个 idpoly 对象，表示识别出的 ARMAX 模型。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Matlab笔记&quot;&gt;&lt;a href=&quot;#Matlab笔记&quot; class=&quot;headerlink&quot; title=&quot;Matlab笔记&quot;&gt;&lt;/a&gt;Matlab笔记&lt;/h1&gt;&lt;p&gt;前言：多查找文档！！！&lt;a href=&quot;https://ww2.mathworks.cn/h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Effective STL</title>
    <link href="https://example.com/2025/05/06/Effective-STL/"/>
    <id>https://example.com/2025/05/06/Effective-STL/</id>
    <published>2025-05-06T06:56:04.000Z</published>
    <updated>2025-05-06T06:56:04.620Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>oop查重的故事</title>
    <link href="https://example.com/2025/04/29/oop%E6%9F%A5%E9%87%8D%E7%9A%84%E6%95%85%E4%BA%8B%E2%80%9C/"/>
    <id>https://example.com/2025/04/29/oop%E6%9F%A5%E9%87%8D%E7%9A%84%E6%95%85%E4%BA%8B%E2%80%9C/</id>
    <published>2025-04-29T06:07:33.000Z</published>
    <updated>2025-04-29T06:09:11.467Z</updated>
    
    <content type="html"><![CDATA[<p>​     今天才得知oop是要查重的！！！！！！！！！</p><p>​     并且数据结构只会查重更加严峻。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​     今天才得知oop是要查重的！！！！！！！！！&lt;/p&gt;
&lt;p&gt;​     并且数据结构只会查重更加严峻。&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="随笔" scheme="https://example.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>关于配环境的一些教程</title>
    <link href="https://example.com/2025/04/22/%E5%85%B3%E4%BA%8E%E9%85%8D%E7%8E%AF%E5%A2%83%E7%9A%84%E4%B8%80%E4%BA%9B%E6%95%99%E7%A8%8B/"/>
    <id>https://example.com/2025/04/22/%E5%85%B3%E4%BA%8E%E9%85%8D%E7%8E%AF%E5%A2%83%E7%9A%84%E4%B8%80%E4%BA%9B%E6%95%99%E7%A8%8B/</id>
    <published>2025-04-22T10:26:45.000Z</published>
    <updated>2025-04-22T10:30:59.634Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配环境踩过的那些坑"><a href="#配环境踩过的那些坑" class="headerlink" title="配环境踩过的那些坑"></a>配环境踩过的那些坑</h1><blockquote><p>我<strong>每次</strong>配环境都基本上要配两三次，答疑坊加google全部翻遍，可能是我的电脑过于魔性。</p><p>下面介绍一些配环境需要注意的点以及教程：预计更新：VSstudio VScode Choco hexo  etc.</p></blockquote><h3 id="VSstudio-我以为配环境永远会这么简单"><a href="#VSstudio-我以为配环境永远会这么简单" class="headerlink" title="VSstudio:我以为配环境永远会这么简单"></a>VSstudio:我以为配环境永远会这么简单</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;配环境踩过的那些坑&quot;&gt;&lt;a href=&quot;#配环境踩过的那些坑&quot; class=&quot;headerlink&quot; title=&quot;配环境踩过的那些坑&quot;&gt;&lt;/a&gt;配环境踩过的那些坑&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;我&lt;strong&gt;每次&lt;/strong&gt;配环境都基本上要配</summary>
      
    
    
    
    
    <category term="计算机小白" scheme="https://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
</feed>
