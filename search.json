[{"url":"/2025/08/19/Matlab笔记/","content":"# Matlab笔记\n\n前言：多查找文档！！！[MATLAB Documentation](https://ww2.mathworks.cn/help/matlab/index.html?s_tid=hc_panel)\n\n## （课程）\n\n1.matlab起源于**FORTRAN语言**\n\n2.摩尔定律：集成电路上可容纳的**晶体管数目**，大约每 **18-24 个月翻一倍**。\n\n3.科学计算是基于**浮点数体系**\n\n4.“64位”：一个浮点数用64位储存（double）\n\n5.误差：相对误差更加重要\n\n6.example1：流体计算：\n\n   \n\n## （自学）\n\nmatlab：语法类似于python\n\n### 1.函数格式：\n\n```\nfunction[输出形参表：output1,...,outputn] = 函数名(输入形参表：)\n//函数体代码部分//\nend\n```\n\n函数存为m文件，命名为函数名\n\nexample：获取数列最大值\n\n```matlab\nmy_max.m\nfunction [maxval]=my_max(L)\n\tmaxval=L(1)\n\tfor ii=2:length(L)\n\t\tif maxval<L(ii)\n           maxval=L(ii)\n        end\n    end\nend\n\n>>my_max(1:100)得到100\n```\n\n优先利用matlab已有函数\n\n输入参量：nargin（利用switch nargin判断输入参量个数：case 1输入一个参量 etc.）\n\n~：忽略不想要的输出：[~,a]:节省内存空间\n\n@：创建<u>函数句柄</u>：\n\n​      *函数句柄：**函数句柄（function handle）\\*是对某个函数的引用*或“指针”，而不是函数值本身。*\n\n*它保存了“如何调用函数”的信息，因此可以通过句柄间接调用函数。(类似于别称)\\**\n\n可以利用@来创建匿名函数从而减少m文件的创建：\n\n```matlab\n>> fun1=@(x,y)(x+y);\n>> fun1(1,1)\n\nans =\n\n     2\n\n```\n\n### 2.图像绘制：\n\nmeshigrid：\n\n**`meshgrid`** 用来把 **一维向量**（x 方向、y 方向的取值范围）转换成 **二维网格矩阵**。\n\n常用于 **绘制三维图** 或 **二维函数可视化**。\n\n```matlab\n[X, Y] = meshgrid(x, y);\n[X, Y, Z] = meshgrid(x, y, z);\n```\n\n\n\n\n\n二维与三维：\n\n- plot->plot3（一般三维图像）\n- scatter->scatter3（散点图）\n- bar->bar3/bar3h（柱状图）\n- hist->hist3（区间直方图）\n- pie->pie3（饼图）\n- surf(x,y,z)（三维曲面图：surf(x,y,z,c)可指定颜色；a=surf(-）可以把a作为曲面对象）\n- mesh(x,y,z)（曲面网格图）\n- contour(z)（等高线图）\n\n示例：\n\n```matlab\nload carbig %这是matlab内部自带的数据\nX=[MPG,Weight]\nhist3(X)\nxlabel('MPG')\nylabel('Weight')\n%并没有自带？？\n```\n\n\n\n\n\n绘图常用指令：\n\nhold on/hold off    保持/不保持图像\n\ncolorbar    颜色栏\n\nxlim(x1,x2)/ylim\t坐标轴范围\n\nylabel/xlabel\t坐标轴标签\n\ntitle \t图像标题\n\naxis on/axis off\t打开关闭坐标轴\n\ntext(x,y,'str')\t在(x,y)处添加文字\n\nquiver(x1,y1,x2,y2)\t生成(x1,y1)到(x2,y2)的箭头\n\n\n\n\n\n句柄/窗口控制：\n\n图像句柄：通过句柄对图像的参数进行一些后期修改。\n\n*（句柄能调用的特性必须是图像本身所拥有的特性）*\n\n```matlab\nx=linspace(-2*pi,2*pi);\ny1=sin(x);\ny2=cos(x);\np=plot(x,y1,x,y2);\np(1).LineWidth=2;%建立句柄修改第一条曲线线宽\np(2).Marker='*';%建立句柄修改第二条曲线标识\n```\n\n| 函数  | 英文全称/含义      | 返回对象                                   | 用途                                            |\n| :---: | ------------------ | ------------------------------------------ | ----------------------------------------------- |\n| `gca` | get current axes   | 当前坐标轴 (Axes) 的句柄                   | 对坐标轴属性（刻度、标签、范围等）进行修改      |\n| `gcf` | get current figure | 当前图形窗口 (Figure) 的句柄               | 对整个窗口属性（大小、标题、背景色等）进行修改  |\n| `gco` | get current object | 当前选中的图形对象 (Line, Patch, Surface…) | 对图形元素属性（颜色、线型、Marker 等）进行修改 |\n\n上表为gca，gcf，gco的用途（都是名词）\n\n> [!NOTE]\n>\n> gca区分子窗口，需要对每个subplot操作\n\n\n\ntip：在打开图片的窗口中也可以进行一些编辑操作\n\nctrl+s保存\n\n\n\n### 3.算法部分\n\n​\t\t\t\t\t（important）\n\n#### 1.插值和拟合\n\n$$\n插值问题：若已知离散点(x_i,f(x_i)),i=0,1\\dots n,\n\\\\\n求新公式p(x),使得任意p(x_i)=f(x_i),\n\\\\且p(x)在连续x空间内任意一点有定义。\n$$\n\n若p（x）是三角多项式：三角插值\n\n代数多项式：多项式插值\n\nn＝1：线性插值    \tn＝2：抛物线插值\n\n\n\n\n\n①拉格朗日插值法：\n$$\n数据：(x_0,f(x_0)),(x_1,f(x_1))\n\\\\\n构造：y=L_1(x)=f(x_0)\\frac{x-x_1}{x_0-x_1}+f(x_1)\\frac{x-x_0}{x_1-x_0}\n\\\\\n又写作：l_0(x)=\\frac{x-x_1}{x_0-x_1}\\qquad l_1(x)=\\frac{x-x_0}{x_1-x_0}\n\\\\\n则：L_1(x)=f(x_0)l_0(x)+f(x_1)l_1(x)\n$$\n对于n：\n$$\nl_k(x)=\\frac{\\prod^n_{j=0,j\\neq k}(x-x_j)}{\\prod^n_{j=0,j\\neq k}(x_k-x_j)}\n\\\\\nL_n(x)=\\sum^n_{k=0}f(x_k)l_k(x)\n\\\\\n从而有：L_n(x_i)=\\sum^n_{k=0}f(x_k)l_k(x_i)=f(x_i)\n(i=1\\dots n)\n$$\n（linear/nearest/next/previous）：低阶插值\n\n数据量大时需要次数较高，会产生较大震荡。数据规律明显时。高阶插值会更加平滑。\n\n（pchip/cubic/v5cubic/makima/spline）：高阶插值\n\n使用方法：\n\n​\t\tvq=interp1(x,v,xq,method):\n\n​\t\t向量x为样本点，v包含v(x)(应变量),xq是查询点的坐标，method是比如‘makima’这一类的。\n\n傅里叶插值（频域插值）：适合对于周期函数使用\n\nfit：基本实现函数拟合的全部功能（多项式，整数，高斯，正弦，曲面）\n\napp里面有一个曲线拟合工具箱\n\n#### 2.规划算法\n\n线性规划：linprog：x=linprog(f,A,b)求解minf'*x使得A*x小于等于b。\n\n可以改变算法使得它算的更快。\n\n需要指定为整数的线性规划ILP:intlinprog:通过intcon可以指定哪些变量为整数。\n\n```matlab\nintcon = 1:3;   % 指定哪些变量必须为整数\nx = intlinprog(f,intcon,A,b,[],[],lb,ub);\n```\n\n例子：\n$$\n题目：\\\\\n\\begin{aligned}\n&要求\\min \\; 8x_{1} + x_{2} \\\\\n&\\text{条件是} \\\\\n&\\begin{cases}\nx_{2} \\in \\mathbb{Z}, \\\\\nx_{1} + 2x_{2} \\geq 14, \\\\\n4x_{1} - x_{2} \\leq 33, \\\\\n2x_{1} + x_{2} \\leq 20.\n\\end{cases}\n\\end{aligned}\n\n\\\\解：\\\\\n\\begin{array}{c|c}\n\\text{数学模型} & \\text{MATLAB 表达} \\\\ \\hline\n8x_{1} + x_{2} & f = \\begin{bmatrix} 8 \\\\ 1 \\end{bmatrix} \\\\[10pt]\nx_{1} + 2x_{2} \\geq 14 & A(1,:) = [-1,-2], \\; b(1) = 14 \\\\[6pt]\n4x_{1} - x_{2} \\leq 33 & A(2,:) = [-4,-1], \\; b(2) = -33 \\\\[6pt]\n2x_{1} + x_{2} \\leq 20 & A(3,:) = [2,1], \\; b(3) = 20 \\\\[6pt]\nx_{2} \\in \\mathbb{Z} & \\text{intcon} = \\{2\\}\n\\end{array}\n\\\\注：matlab里面需要把大于等于转化为小于等于。\n\n\\\\从而有：\\\\\n\nf = \\begin{bmatrix} 8 \\\\[6pt] 1 \\end{bmatrix}, \\quad\nA = \\begin{bmatrix}\n-1 & -2 \\\\\n-4 & -1 \\\\\n 2 &  1\n\\end{bmatrix}, \\quad\nb = \\begin{bmatrix}\n14 \\\\[6pt] -33 \\\\[6pt] 20\n\\end{bmatrix}, \\quad\n\\text{intcon} = \\{2\\}.\n$$\n求单变量在区间内的极值：fminbnd：x=fiminbnd(fun,x_1,x_2)返回一个值x，是标量函数fun在x_1~x_2区间中的局部最小值。（display iter可以显示迭代）\n\n求不连续函数的值：fminsearch：x=fminsearch(fun,x_0)在x_0处求fun函数局部最小值。（也可显示迭代）\n\n#### 3.分类算法\n\n在一些问题中，数据的回归值只有有限组数，称之为类别。不需要在连续空间进行回归，只需要对每一组数据投影到确定的类别。\n\n①贝叶斯方法分类：（需要各个类别相互独立）fitcnb\n\nMdl=fitcnb(Tb1,ResponseVarName)(数据集加标签值)\n\n- `X`：训练数据矩阵，大小是 n×p，表示 nnn 个样本、每个样本有 p 个特征。\n- `Y`：分类标签向量，大小是 n×1，可以是数字、字符向量、categorical 类型。\n- `Mdl`：训练好的 Naive Bayes 模型对象。\n\n->未知数据预测：label=predict（Mdl,x)预测x处情况\n\n②二叉决策树\n\n![image-20250819102750401](C:\\Users\\21729\\AppData\\Roaming\\Typora\\typora-user-images\\image-20250819102750401.png)\n\nfictree：tree=fictree(Tb1,Response)（也可以进行预测）\n\n支持向量机分类：另一种分类模式\n\nK-最近邻分类：对于一个需要预测的输入向量x，我们只需要在训练数据集中寻找k个与向量x最近的向量的集合，然后把x的类别预测为这k个样本中类别数最多的那一类。\n（fitcsvm）(效果不很好，受误差影响大)\n\n层次聚类：linkage+cluster\n\nk-means聚类：选一个聚类中心，分配样本，移动聚类中心...停止移动\n\n#### 4.预测算法\n\n在问题中，往往会给出时刻以及其对应的数据，要求对于未来的数据进行预测，这类问题被称为时序预测：y=f(t)在一系列离散点上的函数值。\n\n时序预测的重点在于**时序模型选取**。\n\n经常使用：ARMA时序模型\n\niddata：把输入和输出数据封装在一个iddata中：data=iddata(输出信号，输入信号，采样时间)\n\nforecast&compare：预测和对比\n\n代码\n\nar:ar模型的阶数一般意思是：用几个过去的点来预测当前。\n\n```matlab\nsys=ar(z9,4)%用数据 Z9 （一般是 iddata 格式的数据）去拟合一个 4 阶 AR 模型。\n%z9.ouputdata可以用来在compare中画图\n\n```\n\narmax函数：**带外生输入的自回归滑动平均模型**。\n\n```matlab\nsys = armax(data, [na,nb,nc,nk])\n\n%%参数解释：\n%%data：输入输出数据（通常是 iddata 格式）\n%%na：AR 部分的阶数\n%%nb：B(q) 的阶数（输入的多项式阶数 + 1）\n%%nc：C(q) 的阶数（噪声模型）\n%%nk：输入延迟（dead time，以采样点计）\n%%返回：\n%%sys 是一个 idpoly 对象，表示识别出的 ARMAX 模型。\n```\n\n"},{"title":"Effective STL","url":"/2025/05/06/Effective-STL/"},{"title":"oop查重的故事","url":"/2025/04/29/oop查重的故事“/","content":"\n​     今天才得知oop是要查重的！！！！！！！！！\n\n​     并且数据结构只会查重更加严峻。\n","tags":["随笔"]},{"title":"关于配环境的一些教程","url":"/2025/04/22/关于配环境的一些教程/","content":"\n# 配环境踩过的那些坑\n\n> 我**每次**配环境都基本上要配两三次，答疑坊加google全部翻遍，可能是我的电脑过于魔性。\n>\n> 下面介绍一些配环境需要注意的点以及教程：预计更新：VSstudio VScode Choco hexo  etc.\n\n### VSstudio:我以为配环境永远会这么简单\n","tags":["计算机小白"]},{"title":"categories","url":"/categories/index.html"},{"title":"tags","url":"/tags/index.html"},{"title":"about","url":"/about/index.html"}]